datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                       String          @id @default(cuid())
  name                     String
  email                    String          @unique
  password                 String
  userCampaigns            CampaignUser[]
  designatedVotingVouchers VotingVoucher[]
}

model Campaign {
  id             String               @id @default(cuid())
  name           String
  pubKey         String?
  startDate      DateTime?
  endDate        DateTime?
  campaignUsers  CampaignUser[]
  publicLinks    CampaignPublicLink[]
  districts      District[]
  candidates     CampaignCandidate[]
  settings       CampaignSettings?
  votingVouchers VotingVoucher[]
}

model CampaignUser {
  id         String     @id @default(cuid())
  role       String
  userId     String
  campaignId String
  user       User       @relation(fields: [userId], references: [id])
  campaign   Campaign   @relation(fields: [campaignId], references: [id])
  districts  District[]
}

model CampaignPublicLink {
  id         String    @id @default(cuid())
  campaignId String
  link       String
  validFrom  DateTime?
  validUntil DateTime?
  campaign   Campaign  @relation(fields: [campaignId], references: [id])
}

model CampaignCandidate {
  id          String   @id @default(cuid())
  name        String
  description String
  index       Int
  campaign    Campaign @relation(fields: [campaignId], references: [id])
  campaignId  String
}

model CampaignSettings {
  id                          String   @id @default(cuid())
  campaignId                  String   @unique
  campaign                    Campaign @relation(fields: [campaignId], references: [id])
  votingMechanism             String
  isManualVoteStartEndEnabled Boolean
}

model VotingVoucher {
  id               String    @id @default(cuid())
  campaignId       String
  campaign         Campaign  @relation(fields: [campaignId], references: [id])
  issueDate        DateTime
  validUntilDate   DateTime?
  designatedUserId String?
  designatedUser   User?     @relation(fields: [designatedUserId], references: [id])
}

model District {
  id               String         @id @default(cuid())
  name             String
  campaignId       String?
  campaign         Campaign?      @relation(fields: [campaignId], references: [id])
  parentDistrictId String?
  parentDistrict   District?      @relation(name: "parent-child-district", fields: [parentDistrictId], references: [id])
  childDistricts   District[]     @relation(name: "parent-child-district")
  campaignUsers    CampaignUser[]
}
